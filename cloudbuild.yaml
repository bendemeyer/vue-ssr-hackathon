steps:
# NPM install and Test
- name: "gcr.io/cloud-builders/npm"
  args: ["install"]
- name: "gcr.io/cloud-builders/npm"
  args: ["run", "test"]
  id: test

# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/decomp-phase-2-hack-day/hack-day-docker-central/hackathon:$SHORT_SHA', '.']
  id: 'build'
  waitFor: ['test']
# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/decomp-phase-2-hack-day/hack-day-docker-central/hackathon:$SHORT_SHA']
  waitFor: ['build']

# Build the test image
- name: 'gcr.io/cloud-builders/docker'
  dir: 'e2e'
  args: [ 'build', '-t', 'us-central1-docker.pkg.dev/decomp-phase-2-hack-day/hack-day-docker-central/hackathon-verify:$SHORT_SHA', '.' ]
  id: 'build-e2e'
  waitFor: ['test']
# Push the test image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  dir: 'e2e'
  args: [ 'push', 'us-central1-docker.pkg.dev/decomp-phase-2-hack-day/hack-day-docker-central/hackathon-verify:$SHORT_SHA' ]
  waitFor: ['build-e2e']

# Deploy using cloud deploy to cloud run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: ['deploy', 'apply', '--file=clouddeploy.yaml', '--region=us-central1', '--project=decomp-phase-2-hack-day']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: ['deploy', 'releases', 'create', 'release-$SHORT_SHA', '--region=us-central1', '--project=decomp-phase-2-hack-day', '--delivery-pipeline=hackday-pipeline', '--images=hackday-image=us-central1-docker.pkg.dev/decomp-phase-2-hack-day/hack-day-docker-central/hackathon:$SHORT_SHA,hackday-verify-image=us-central1-docker.pkg.dev/decomp-phase-2-hack-day/hack-day-docker-central/hackathon-verify:$SHORT_SHA']

options:
  pool:
    name: 'projects/decomp-phase-2-hack-day/locations/us-central1/workerPools/hackday-pool'
  logging: CLOUD_LOGGING_ONLY
